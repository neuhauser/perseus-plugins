name:	mzTab-version
section:	metadata
def:	The version of the mzTab file.
type:	String	
quantification:	manatory|manatory
identification:	manatory|manatory
example:	MTD   mzTab-version   1.0 rc4

name:	mzTab-mode
section:	metadata
def:	The results included in an mzTab file can be reported in 2 ways: "Complete" (when results for each assay/replicate are included) and "Summary", when only the most representative results are reported.
type:	Enum
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD   mzTab-mode   Complete
example:	MTD   mzTab-mode   Summary

name:	mzTab-type
section:	metadata
def:	The results included in an mzTab file MUST be flagged as "Identification" or "Quantification"  - the latter encompassing approaches that are quantification only or quantification and identification.
type:	Enum
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD   mzTab-type   Quantification
example:	MTD   mzTab-type   Identification

name:	mzTab-ID
section:	metadata
def:	The ID of the mzTab file.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   mzTab-ID	PRIDE_1234

name:	title
section:	metadata
def:	The file's human readable title.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   title   My first test experiment

name:	description
section:	metadata
def:	The file's human readable description.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD   description   An experiment investigating the effects of Il-6.

name:	sample_processing[1-n]
section:	metadata
def:	A list of parameters describing a sample processing step. The order of the data_processing items should reflect the order these processing steps were performed in. If multiple parameters are given for a step these MUST be separated by a "|".
type:	Parameter List
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample_processing[1]  [SEP, SEP:00173, SDS PAGE,]
example:	MTD  sample_processing[2]  [SEP, SEP:00142, enzyme digestion,]|[MS, ...
                                                                MS:1001251, Trypsin, ]
name:	instrument[1-n]-name
section:	metadata
def:	The name of the instrument used in the experiment. Multiple instruments are numbered 1..n.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  instrument[1]-name[1]  [MS, MS:1000449, LTQ Orbitrap,] 
example:	MTD  instrument[2]-name  [MS, MS:1000031, Instrument model, name of the instrument not included in the CV] 

name:	instrument[1-n]-source
section:	metadata
def:	The instrument's source used in the experiment. Multiple instruments are numbered 1..n.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  instrument[1]-source  [MS, MS:1000073, ESI,]
example:	MTD  instrument[2]-source  [MS, MS:1000598, ETD,]

name:	instrument[1-n]-analyzer
section:	metadata
def:	The instrument's analyzer type used in the experiment. Multiple instruments are enumerated 1..n.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  instrument[1]-analyzer  [MS, MS:1000291, linear ion trap,]
example:	MTD  instrument[2]-analyzer  [MS, MS:1000484, orbitrap,]

name:	instrument[1-n]-detector
section:	metadata
def:	The instrument's detector type used in the experiment. Multiple instruments are numbered 1..n.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  instrument[1]-detector  [MS, MS:1000253, electron multiplier,]
example:	MTD  instrument[2]-detector  [MS, MS:1000348, focal plane collector,]

name:	software[1-n]
section:	metadata
def:	Software used to analyze the data and obtain the results reported. The parameter's value SHOULD contain the software's version. The order (numbering) should reflect the order in which the tools were used.
type:	Parameter
quantification:	optional|mandatory
identification:	optional|optional
example:	MTD  software[1]  [MS, MS:1001207, Mascot, 2.3]
example:	MTD  software[2]  [MS, MS:1001561, Scaffold, 1.0]

name:	software[1-n]-setting
section:	metadata
def:	A software setting used. This field MAY occur multiple times for a single software. The value of this field is deliberately set as a String, since there currently do not exist cvParams for every possible setting.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  software[1]-setting  Fragment tolerance = 0.1 Da
example:	MTD  software[2]-setting  Parent tolerance = 0.5 Da

name:	false_discovery_rate
section:	metadata
def:	The file's false discovery rate(s) reported at the PSM, peptide, and/or protein level. False Localization Rate (FLD) for the reporting of modifications can also be reported here. Multiple parameters MUST be separated by "|".
type:	Parameter List
quantification:	optional|optional
identification:	optional|optional
example:	MTD  false_discovery_rate  [MS, MS:1001364, pep:global FDR, 0.01]|...|[MS, MS:1001214, prot:global FDR, 0.08]

name:	publication[1-n]
section:	metadata
def:	A publication associated with this file. Several publications can be given by indicating the number in the square brackets after "publication". PubMed ids must be prefixed by "pubmed:", DOIs by "doi:". Multiple identifiers MUST be separated by "|".
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  publication[1]  pubmed:21063943|doi:10.1007/978-1-60761-987-1_6
example:	MTD  publication[2]  pubmed:20name:|doi:10.1016/j.jprot.2010.06.008

name:	contact[1-n]-name
section:	metadata
def:	The contact's name. Several contacts can be given by indicating the number in the square brackets after "contact". A contact has to be supplied in the format [first name] [initials] [last name] (see example).
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  contact[1]-name  James D. Watson
example:	MTD  contact[2]-name  Francis Crick

name:	contact[1-n]-affiliation
section:	metadata
def:	The contact's affiliation.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  contact[1]-affiliation  Cambridge University, UK
example:	MTD  contact[2]-affiliation  Cambridge University, UK

name:	contact[1-n]-email
section:	metadata
def:	The contact's e-mail address.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  contact[1]-email  watson@cam.ac.uk
example:	MTD  contact[2]-email  crick@cam.ac.uk

name:	uri
section:	metadata
def:	A URI pointing to the file's source data (e.g., a PRIDE experiment or a PeptideAtlas build).
type:	URI
quantification:	optional|optional
identification:	optional|optional
example:	MTD  uri  http://www.ebi.ac.uk/pride/url/to/experiment
example:	MTD  uri  http://proteomecentral.proteomexchange.org/cgi/GetDataset

name:	fixed_mod[1-n]
section:	metadata
def:	A parameter describing a fixed modification searched for. Multiple fixed modifications are numbered 1..n.
type:	Parameter
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD  fixed_mod[1]  [UNIMOD, UNIMOD:4, Carbamidomethyl, ]
example:	MTD  fixed_mod[2]  [UNIMOD, UNIMOD:35, Oxidation, ]                                                  

name:	fixed_mod[1-n]-site
section:	metadata
def:	A string describing a fixed modifications site. Following the unimod convention, modification site is a residue (e.g. “M”), terminus (“N-term” or “C-term”) or both (e.g. “N-term Q” or “C-term K”).
type:	string
quantification:	optional|optional
identification:	optional|optional
example:	MTD  fixed_mod[1]  [UNIMOD, UNIMOD:35, Oxidation, ]
example:	MTD  fixed_mod[1]-site M
example:	MTD  fixed_mod[2] [UNIMOD, UNIMOD:1, Acetyl, ]
example:	MTD  fixed_mod[2]-site  N-term
example:	MTD  fixed_mod[3]  [UNIMOD, UNIMOD:2, Amidated, ]
example:	MTD  fixed_mod[3]-site  C-term

name:	fixed_mod[1-n]-position
section:	metadata
def:	A string describing the term specifity of a fixed modification. Following the unimod convention, term specifity is denoted by the strings “Anywhere”, “Any N-term”, “Any C-term”, “Protein N-term”, “Protein C-term”.
type:	string
quantification:	optional|optional
identification:	optional|optional
example:	MTD  fixed_mod[1]  [UNIMOD, UNIMOD:35, Oxidation, ]                                                  
example:	MTD  fixed_mod[1]-site  M
example:	MTD  fixed_mod[2] [UNIMOD, UNIMOD:1, Acetyl, ]                                                
example:	MTD  fixed_mod[2]-site  N-term
example:	MTD  fixed_mod[2]-position  Protein N-term
example:	MTD  fixed_mod[3]  [UNIMOD, UNIMOD:2, Amidated, ]                                                
example:	MTD  fixed_mod[3]-site  C-term 
example:	MTD  fixed_mod[3]-position  Protein C-term                                                 

name:	variable_mod[1-n]
section:	metadata
def:	A parameter describing a variable modification searched for. Multiple variable modifications are numbered 1.. n.
type:	Parameter
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD  variable_mod[1]  [UNIMOD, UNIMOD:21, Phospho, ]
example:	MTD  variable_mod[2]  [UNIMOD, UNIMOD:35, Oxidation, ]

name:	variable_mod[1-n]-site
section:	metadata
def:	A string describing a variable modifications site. Following the unimod convention, modification site is a residue (e.g. “M”), terminus (“N-term” or “C-term”) or both (e.g. “N-term Q” or “C-term K”).
type:	string
quantification:	optional|optional
identification:	optional|optional
example:	MTD  variable_mod[1]  [UNIMOD, UNIMOD:35, Oxidation, ]
example:	MTD  variable_mod[1]-site  M
example:	MTD  variable_mod[2] [UNIMOD, UNIMOD:1, Acetyl, ]
example:	MTD  variable_mod[2]-site  N-term
example:	MTD  variable_mod[3]  [UNIMOD, UNIMOD:2, Amidated, ]
example:	MTD  variable_mod[3]-site  C-term

name:	variable_mod[1-n]-position
section:	metadata
def:	A string describing the term specifity of a variable modification. Following the unimod convention, term specifity is denoted by the strings “Anywhere”, “Any N-term”, “Any C-term”, “Protein N-term”, “Protein C-term”.
type:	string
quantification:	optional|optional
identification:	optional|optional
example:	MTD  variable_mod[1]  [UNIMOD, UNIMOD:35, Oxidation, ]
example:	MTD  variable_mod[1]-site  M
example:	MTD  variable_mod[2] [UNIMOD, UNIMOD:1, Acetyl, ]
example:	MTD  variable_mod[2]-site  N-term
example:	MTD  variable_mod[2]-position  Protein N-term
example:	MTD  variable_mod[3]  [UNIMOD, UNIMOD:2, Amidated, ]
example:	MTD  variable_mod[3]-site  C-term
example:	MTD  variable_mod[3]-position  Protein C-term                                          

name:	quantification_method
section:	metadata
def:	The quantification method used in the experiment reported in the file.
type:	Parameter
quantification:	optional|mandatory
identification:	optional|optional
example:	MTD  quantification_method  [MS, MS:1001837, iTRAQ quantitation analysis, ]

name:	protein-quantification_unit
section:	metadata
def:	Defines what type of units is reported in the protein quantification fields.
type:	Parameter
quantification:	(mandatory)|(mandatory)
identification:	optional|optional
example:	MTD  protein-quantification_unit  [PRIDE, PRIDE:0000395, Ratio, ]

name:	peptide-quantification_unit
section:	metadata
def:	Defines what type of units is reported in the peptide quantification fields.
type:	Parameter
quantification:	(mandatory)|(mandatory)
identification:	optional|optional
example:	MTD  peptide-quantification_unit  [PRIDE, PRIDE:0000395, Ratio, ]

name:	small_molecule-quantification_unit
section:	metadata
def:	Defines what type of units is reported in the small molecule quantification fields.
type:	Parameter
quantification:	(mandatory)|(mandatory)
identification:	optional|optional
example:	MTD  small_molecule-quantification_unit  [PRIDE, PRIDE:0000395, Ratio, ]

name:	ms_run[1-n]-format
section:	metadata
def:	A parameter specifying the data format of the external MS data file.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  ms_run[1]-format [MS, MS:1000584, mzML file, ]
example:	MTD  ms_run[2]-format [MS, MS:1001062, Mascot MGF file, ]

name:	ms_run[1-n]-location
section:	metadata
def:	Location of the external data file. If the actual location of the MS run is unknown, a “null” MUST be used as a place holder value.
type:	URL
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	MTD  ms_run_location[1]  file://C:\path\to\my\file
example:	MTD  ms_run_location[2]  ftp://ftp.ebi.ac.uk/path/to/file

name:	ms_run[1-n]-id_format
section:	metadata
def:	Parameter specifying the id format used in the external data file.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  ms_run[1]-id_format  [MS, MS:1000530, mzML unique identifier, ]
example:	MTD  ms_run[2]-id_format  [MS, MS:1000774, multiple peak list ... nativeID format, ]

name:	ms_run[1-n]-fragmentation_method
section:	metadata
def:	A list of "|" separated parameters describing all the types of fragmentation used in a given ms run.
type:	Parameter List
quantification:	optional|optional
identification:	optional|optional
example:	MTD  ms_run[1]-fragmentation_method  [MS, MS:1000133, CID, ]
example:	MTD ms_run[2]-fragmentation_method [MS, MS:1000422, HCD ..., ]

name:	custom
section:	metadata
def:	Any additional parameters describing the analysis reported.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  custom  [,,MS operator, Florian]

name:	sample[1-n]-species
section:	metadata
def:	The respective species of the samples analysed. 
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	COM  Experiment where all samples consisted of the same two species
example:	MTD  sample[1]-species  [NEWT, 9606, Homo sapiens (Human), ]
example:	MTD  sample[2]-species  [NEWT, 12059, Rhinovirus, ]
example:	COM  Experiment where different two samples from different species (combinations)
example:	COM  were analysed as biological replicates.
example:	MTD  sample[1]-species  [NEWT, 9606, Homo sapiens (Human), ]
example:	MTD  sample[1]-species  [NEWT, 573824, Human rhinovirus 1, ]
example:	MTD  sample[2]-species  [NEWT, 9606, Homo sapiens (Human), ]
example:	MTD  sample[2]-species  [NEWT, 12130, Human rhinovirus 2, ]

name:	sample[1-n]-tissue
section:	metadata
def:	The respective tissue(s) of the sample.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample[1]-tissue  [BTO, BTO:0000759, liver, ]

name:	sample[1-n]-cell_type
section:	metadata
def:	The respective cell type(s) of the sample.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample[1]-cell_type  [CL, CL:0000182, hepatocyte, ]

name:	sample[1-n]-disease
section:	metadata
def:	The respective disease(s) of the sample. 
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample[1]-disease  [DOID, DOID:684, hepatocellular carcinoma, ]
example:	MTD  sample[1]-disease  [DOID, DOID:9451, alcoholic fatty liver, ]

name:	sample[1-n]-description
section:	metadata
def:	A human readable description of the sample.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample[1]-description  Hepatocellular carcinoma samples.
example:	MTD  sample[2]-description  Healthy control samples.

name:	sample[1-n]-custom
section:	metadata
def:	Parameters describing the sample's additional properties.
type:	Parameter
quantification:	optional|optional
identification:	optional|optional
example:	MTD  sample[1]-custom   [,,Extraction date, 2011-12-21]
example:	MTD  sample[1]-custom   [,,Extraction reason, liver biopsy]

name:	assay[1-n]-quantification_reagent
section:	metadata
def:	The reagent used to label the sample in the assay. For label-free analyses the “unlabeled sample” CV term SHOULD be used. For the “light” channel in label-based experiments the appropriate CV term specifying the labelling channel should be used.
type:	Parameter
quantification:	(mandatory)|mandatory
identification:	none|none
example:	MTD  assay[1]-quantification_reagent  [PRIDE,PRIDE:0000114,iTRAQ reagent,114]
example:	MTD  assay[2]-quantification_reagent  [PRIDE,PRIDE:0000115,iTRAQ reagent,115]
example:	OR
example:	MTD	assay[1]-quantification_reagent	[MS,MS:1002038,unlabeled sample,]

name:	assay[1-n]-quantification_mod[1-n]
section:	metadata
def:	A parameter describing a modifications associated with a quantification_reagent. Multiple modifications are numbered 1..n.
type:	Parameter
quantification:	optional|optional
identification:	none|none
example:	MTD  assay[2]-quantification_mod[1] [UNIMOD, UNIMOD:188, Label:13C(6), ]

name:	assay[1-n]-quantification_mod[1-n]-site
section:	metadata
def:	A string describing the modifications site. Following the unimod convention, modification site is a residue (e.g. “M”), terminus (“N-term” or “C-term”) or both (e.g. “N-term Q” or “C-term K”).
type:	String
quantification:	optional|optional
identification:	none|none
example:	MTD  assay[2]-quantification_mod[1] [UNIMOD, UNIMOD:188, Label:13C(6), ]
example:	MTD  assay[2]-quantification_mod[2] [UNIMOD, UNIMOD:188, Label:13C(6), ]
example:	MTD  assay[2]-quantification_mod[1]-site    R
example:	MTD  assay[2]-quantification_mod[2]-site    K

name:	assay[1-n]-quantification_mod[1-n]-position
section:	metadata
def:	A string describing the term specifity of the modification. Following the unimod convention, term specifity is denoted by the strings “Anywhere”, “Any N-term”, “Any C-term”, “Protein N-term”, “Protein C-term”.
type:	String
quantification:	optional|optional
identification:	none|none
example:	MTD  assay[2]-quantification_mod[1] [UNIMOD, UNIMOD:188, Label:13C(6), ]
example:	MTD  assay[2]-quantification_mod[2] [UNIMOD, UNIMOD:188, Label:13C(6), ]
example:	MTD  assay[2]-quantification_mod[1]-site    R
example:	MTD  assay[2]-quantification_mod[2]-site    K
example:	MTD  assay[2]-quantification_mod[1]-position    Anywhere
example:	MTD  assay[2]-quantification_mod[2]-position    Anywhere

name:	assay[1-n]-sample_ref
section:	metadata
def:	An association from a given assay to the sample analysed.
type:	{SAMPLE_ID}
quantification:	optional|optional
identification:	optional|optional
example:	MTD  assay[1]-sample_ref  sample[1]
example:	MTD  assay[2]-sample_ref  sample[2]

name:	assay[1-n]-ms_run_ref
section:	metadata
def:	An association from a given assay to the source MS run.
type:	{MS_RUN_ID}
quantification:	optional|mandatory
identification:	optional|optional
example:	MTD	assay[1]-ms_run_ref	ms_run[1]

name:	study_variable[1-n]-assay_refs
section:	metadata
def:	Comma-separated references to the IDs of assays grouped in the study variable. If both assays and study variables are reported in the file, the references are MANDATORY.
type:	{ASSAY_ID}, ...   
quantification:	(mandatory)|mandatory
identification:	optional|optional
example:	MTD	study_variable[1]-assay_refs	assay[1], assay[2], assay[3]

name:	study_variable[1-n]-sample_refs
section:	metadata
def:	Comma-separated references to the samples that were analysed in the study variable.
type:	{SAMPLE_ID}, ... {SAMPLE_ID}   
quantification:	optional|optional
identification:	optional|optional
example:	MTD	study_variable[1]-sample_refs	sample[1]

name:	study_variable[1-n]-description
section:	metadata
def:	A textual description of the study variable.
type:	String
quantification:	(mandatory)|mandatory
identification:	(mandatory)|(mandatory)
example:	MTD	study_variable[1]-description	Group B (spike-in 0.74 fmol/uL)

name:	cv[1-n]-label
section:	metadata
def:	A string describing the labels of the controlled vocabularies/ontologies used in the mzTab file
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  cv[1]-label  MS                                                  
	
name:	cv[1-n]-full_name
section:	metadata
def:	A string describing the full names of the controlled vocabularies/ontologies used in the mzTab file
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  cv[1]-full_name  MS                                                  

name:	cv[1-n]-version
section:	metadata
def:	A string describing the version of the controlled vocabularies/ontologies used in the mzTab file
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  cv[1]-version  3.54.0                                                  

name:	cv[1-n]-url
section:	metadata
def:	A string containing the URLs of the controlled vocabularies/ontologies used in the mzTab file
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD  cv[1]-url  http://psidev.cvs.sourceforge.net/viewvc/psidev/psi/psi-ms/mzML/controlledVocabulary/psi-ms.obo                                                  

name:	colunit-protein
section:	metadata
def:	Defines the unit for the data reported in a column of the protein section. The format of the value has to be {column name}={Parameter defining the unit}This field MUST NOT be used to define a unit for quantification columns. The unit used for protein quantification values MUST be set in protein-quantification_unit.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   

name:	colunit-peptide
section:	metadata
def:	Defines the used unit for a column in the peptide section. The format of the value has to be {column name}={Parameter defining the unit} This field MUST NOT be used to define a unit for quantification columns. The unit used for peptide quantification values MUST be set in peptide-quantification_unit.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   colunit-peptide retention_time=[UO,UO:0000031, minute,]

name:	colunit-psm
section:	metadata
def:	Defines the used unit for a column in the PSM section. The format of the value has to be {column name}={Parameter defining the unit} This field MUST NOT be used to define a unit for quantification columns. The unit used for peptide quantification values MUST be set in peptide-quantification_unit.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   colunit-psm retention_time=[UO,UO:0000031, minute,]

name:	colunit-small_molecule
section:	metadata
def:	Defines the used unit for a column in the small molecule section. The format of the value has to be {column name}={Parameter defining the unit} This field MUST NOT be used to define a unit for quantification columns. The unit used for small molecule quantification values MUST be set in small_molecule-quantification_unit.
type:	String
quantification:	optional|optional
identification:	optional|optional
example:	MTD   colunit-small_molecule retention_time=[UO,UO:0000031, minute,]

name:	accession
section:	protein
def:	The accession of the protein in the source database. A protein accession MUST be unique within one mzTab file. If different quantification values are required for the same underlying accession, for example if differentially modified forms of a protein have been quantified, a suitable suffix SHOULD be appended to the accession e.g. P12345-1, P12345-2.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession  ...
example:	PRT  P12345     ...
example:	PRT  P12346     ...

name:	description
section:	protein
def:	The protein's name and or description line.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession       description                                ...
example:	PRT  P12345       Aspartate aminotransferase, mitochondrial  ...
example:	PRT  P12346       Serotransferrin                            ...

name:	taxid
section:	protein
def:	The NCBI/NEWT taxonomy id for the species the protein was identified in.
type:	Integer
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession  ...  taxid   ...
example:	PRT  P12345     ...  10116   ...
example:	PRT  P12346     ...  10116   ...

name:	species
section:	protein
def:	The human readable species the protein was identified in - this SHOULD be the NCBI entry's name.
type:	String
quantification:	optional|optional
identification:	mandatory|mandatory
example:	PRH  accession  ...  taxid   species                  ...
example:	PRT  P12345     ...  10116   Rattus norvegicus (Rat)  ...
example:	PRT  P12346     ...  10116   Rattus norvegicus (Rat)  ...

name:	database
section:	protein
def:	The protein database used for the search (could theoretically come from a different species). Wherever possible the Miriam (http://www.ebi.ac.uk/miriam) assigned name SHOULD be used.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession  ...  taxid   species                  database   ...
example:	PRT  P12345     ...  10116   Rattus norvegicus (Rat)  UniProtKB  ...
example:	PRT  P12346     ...  10116   Rattus norvegicus (Rat)  UniProtKB  ...

name:	database_version
section:	protein
def:	The protein database's version in case there is no version available (custom build) the creation / download (e.g., for NCBI nr) date SHOULD be given. Additionally, the number of entries in the database MAY be reported in round brackets after the version in the format: {version} ({#entries} entries), for example "2011-11 (1234 entries)".
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession  ...  taxid   species                  database   database_version  ...
example:	PRT  P12345     ...  10116   Rattus norvegicus (Rat)  UniProtKB  2011_11           ...
example:	PRT  P12346     ...  10116   Rattus norvegicus (Rat)  UniProtKB  2011_11           ...

name:	search_engine
section:	protein
def:	A "|" delimited list of search engine(s) used to identify this protein. Search engines MUST be supplied as parameters.
type:	Parameter List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	COM  In this example the first protein was identified by Mascot and Sequest while
example:	COM  the second protein was only identified by Mascot.
example:	PRH  accession  ...   search_engine                                     ...
example:	PRT  P12345     ...   [MS,MS:1001207,Mascot,]|[MS,MS:1001208,Sequest,]  ...
example:	PRT  P12346     ...   [MS,MS:1001207,Mascot,]                           ...

name:	best_search_engine_score
section:	protein
def:	A "|" delimited list of the best search engine score(s) for the given protein across all replicates reported. Scores SHOULD be reported using CV parameters whenever possible.
type:	Parameter List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PRH  accession  ...   best_search_engine_score_ms_run[1]                                             ...
example:	PRT  P12345     ...   [MS,MS:1001171,Mascot score,50]|[MS,MS:1001155,Sequest:xcorr,2] ...
example:	PRT  P12346     ...   [MS,MS:1001171,Mascot score,47.2]                               ...

name:	search_engine_score_ms_run[1-n]
section:	protein
def:	Optional (this column MAY be present) A "|" delimited list of search engine score(s) for the given protein. Scores SHOULD be reported using CV parameters whenever possible.
type:	Parameter List
quantification:	optional|mandatory
identification:	optional|mandatory
example:	PRH  accession  ...   search_engine_score_ms_run[1]                                             ...
example:	PRT  P12345     ...   [MS,MS:1001171,Mascot score,50]|[MS,MS:1001155,Sequest:xcorr,2] ...
example:	PRT  P12346     ...   [MS,MS:1001171,Mascot score,47.2]                               ...

name:	reliability
section:	protein
def:	The reliability of the given protein identification. This must be supplied by the resource and has to be one of the following values: 1: high reliability	2: medium reliability	3: poor reliability	Important: An identification's reliability is resource-dependent.
type:	Integer
quantification:	optional|optional
identification:	optional|optional
example:	PRH  accession  ...   reliability   ...
example:	PRT  P12345     ...   3             ...
example:	PRT  P12346     ...   1             ...

name:	num_psms_ms_run[1-n]
section:	protein
def:	Optional (this column MAY be present) The total number of PSMs that were used to identify this protein from a given ms_run.
type:	Integer
quantification:	optional|optional
identification:	optional|mandatory
example:	COM  P12345 is identified through ABCM, ABCM+Oxidation, CDE, CDE
example:	PRH  accession  ...   num_psms_ms_run[1]  ...
example:	PRT  P12345     ...   4             ...

name:	num_peptides_distinct_ms_run[1-n]
section:	protein
def:	Optional (this column MAY be present) The number of distinct peptide sequences identifying this protein in a given ms_run. Distinct peptides are defined based on their sequence, ignoring different modifications or charge states.
type:	Integer
quantification:	optional|optional
identification:	optional|mandatory
example:	COM  P12345 is identified through ABCM, ABCM+Oxidation, CDE, CDE
example:	PRH  accession  ...   num_peptides_distinct_ms_run[1]   ...
example:	PRT  P12345     ...   3                      ...

name:	num_peptides_unique_ms_run[1-n]
section:	protein
def:	Optional (this column MAY be present) The number of peptides that are mapped uniquely to this protein and the other ambiguity members in this ms_run.
type:	Integer
quantification:	optional|optional
identification:	optional|mandatory
example:	COM  P12345 is identified through ABCM, ABCM+Oxidation, CDE, CDE
example:	COM  ABCM is only from P12345, CDE from P12345 and P12346
example:	PRH  accession  ...   num_peptides_unique_ms_run[1]  ...
example:	PRT  P12345     ...   2                         ...

name:	ambiguity_members
section:	protein
def:	A comma-delimited list of protein accessions. This field should be set in the representative protein of the ambiguity group (the protein identified through the accession in the first column). The accessions listed in this field should identify proteins that could also be identified through these peptides (e.g. "same-set proteins") but were not chosen by the researcher or resource, often for arbitrary reasons. It is NOT RECOMMENDED to report subset proteins as ambiguity_members, since the proteins reported here, together with the representative protein are taken to be a group that cannot be separated based on the peptide evidence.
type:	String List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	COM  P12345, P12347, and P12348 can all be identified through the same peptides
example:	PRH  accession  ...   ambiguity_members  ...
example:	PRT  P12345     ...   P12347,P12348      ...

name:	modifications
section:	protein
def:	In contrast to the PSM section, fixed modifications or modifications caused by the quantification reagent (i.e. the SILAC/iTRAQ label) SHOULD NOT be reported in this column. Column entries are a comma delimited list of modifications found in the given protein. Modifications have to be reported in the following format: {position in protein}{Parameter}-{Modification or Substitution identifier}|{neutral loss} Modification location scores cannot be supplied at the Protein level. Furthermore, in case a position is unknown no position information MAY be supplied. Terminal modifications MUST be reported at position 0 or protein size + 1 respectively. Valid modification identifiers are either PSI-MOD or UNIMOD accession (including the “MOD:” / “UNIMOD:” prefix) or CHEMMODS. CHEMMODS have the format CHEMMOD:+/-{chemical formula or m/z delta}. Valid CHEMMODS are for example “CHEMMOD:+NH4” or “CHEMMOD:-10.1098”. CHEMMODs MUST NOT be used if the modification can be reported using a PSI-MOD or UNIMOD accession. Mass deltas MUST NOT be used for CHEMMODs if the delta can be expressed through a known chemical formula. Neutral losses MAY be reported as cvParams. If a neutral loss is not associated with an existing modification it is reported as separated comma-separated entry. Otherwise, the neutral loss MUST be reported after the modification it is associated with and separated by a ‘|’ from the modification. Additionally, it is possible to report substitutions of amino acids using SUBST:{amino acid}. If different modifications are identified from different ms_runs, a superset of the identified modifications SHOULD be reported here. Detailed modification mapping to individual ms_runs is provided through the PSM table. If protein level modifications are not reported, a “null” MUST be used. If protein level modifications are reported but not present on a given protein, a “0” MUST be reported.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	COM  Protein P12345 TESTPEPTIDES with 2 phosphorylation sites: TEpSTPEPpTIDES
example:	COM  Common use cases without score:
example:	COM  Example 1: Both locations have been determined
example:	PRH  accession   ...  modifications                                   ...
example:	PRT  P12345      ...  3-MOD:00412,8-MOD:00412                         ...
example:	COM  Example 2: Like Ex. 1, but first site localization is ambiguous (S or T)
example:	PRH  accession   ...  modifications                                   ...
example:	PRT  P12345      ...  3|4-MOD:00412,8-MOD:00412                       ...
example:	COM  Example 3: Protein only known to contain two phosphor sites in the range 3 to 8 
example:	PRH  accession   ...  modifications                                   ...
example:	PRT  P12345      ...  3|4|8-MOD:00412, 3|4|8-MOD:00412                ...         
example:	COM  Example 4: No position information or only accurate mass available
example:	PRH  accession   ...  modifications                                   ...
example:	PRT  P12345      ...  CHEMMOD:+159.93                        ...         
example:	COM  Common use cases with probability scores: 
example:	COM  Example 5: MOD:00412 with associated probabilities at position 3 and 4
example:	COM             and a probability of 0.3 at position 8
example:	PRH  accession   ...  modifications                                   ...
example:	PRT  P12345      ...  3[MS,MS:1001876, modification probability, 0.8]|4[MS,MS:1001876, modification probability, 0.2]-MOD:00412,8[MS,MS:1001876, modification probability, 0.3]-MOD:00412        ...
example:	COM Reporting substitutions
example:	COM Example 6: Substitution of amino acid at position 3 with R (Original sequence is reported in sequence column)
example:	PRH  accession   ...  modifications                                   
example:	PRT  P12345      ...  3-SUBST:R

name:	uri
section:	protein
def:	A URI pointing to the protein's source entry in the unit it was identified in (e.g., the PRIDE database or a local database / file identifier).
type:	URI
quantification:	optional|optional
identification:	optional|optional
example:	PRT  accession   ...  uri                                       ...
example:	PRH  P12345      ...  http://www.ebi.ac.uk/pride/url/to/P12345  ...

name:	go_terms
section:	protein
def:	A "|"-delimited list of GO accessions for this protein.
type:	String List
quantification:	optional|optional
identification:	optional|optional
example:	PRT  accession   ...  go_terms                                       ...
example:	PRH  P12345      ...  GO:0006457|GO:0005759|GO:0005886|GO:0004069 ...

name:	protein_coverage
section:	protein
def:	A value between 0 and 1 defining the protein coverage.
type:	Double
quantification:	optional|mandatory
identification:	optional|mandatory
example:	PRT  accession   ...  protein_coverage  ...
example:	PRH  P12345      ...  0.4               ...

name:	protein_abundance_assay[1-n]
section:	protein
def:	Optional (this column MAY be present) The protein's abundance as measured in the given assay through whatever technique was employed. 
type:	Double
quantification:	(mandatory)|mandatory
identification:	optional|optional
example:	PRT  accession   ...  protein_abundance_assay[1]  ...  protein_abundance_assay[2] ...
example:	PRH  P12345      ...  0.4                       ...  0.2                      ...

name:	protein_abundance_study_variable[1-n]
section:	protein
def:	Optional (this column MAY be present) The protein's abundance as measured in the given Study Variable, for example mean or median of quantitative values reported in Assays. 
type:	Double
quantification:	mandatory|mandatory
identification:	optional|optional
example:	PRT  accession   ...  protein_abundance_assay[1]  ...  protein_abundance_assay[2] ...
example:	PRH  P12345      ...  0.4                       ...  0.2                      ...

name:	protein_abundance_stdev_study_variable[1-n]
section:	protein
def:	Optional (this column MAY be present) The standard deviation of the protein's abundance. If a protein's abundance is given for a certain study variable, the corresponding standard deviation column MUST also be present (in case the value is not available "null" should be used).
type:	Double
quantification:	(mandatory)|(mandatory)
identification:	optional|optional
example:	PRT  accession   ...  protein_abundance_stdev_study_variable[1]  ...
example:	PRH  P12345      ...  0.4                       ...

name:	protein_abundance_std_error_study_variable [1-n]
section:	protein
def:	Optional (this column MAY be present) The standard error of the protein's abundance. If a protein's abundance is given for a certain study variable, the corresponding standard error column MUST also be present (in case the value is not available "null" should be used).
type:	Double
quantification:	(mandatory)|(mandatory)
identification:	optional|optional
example:	PRT  accession   ...  protein_abundance_sub[1] ... protein_abundance_std_error_sub[1] ...
example:	PRH  P12345      ...  0.4                      ... 0.03                               ...

name:	opt_global_*
section:	protein
def:	Optional (this column MAY be present) Additional columns can be added to the end of the protein table. These column headers MUST start with the prefix "opt_" followed by the identifier of the object they reference: assay, study variable, MS run or "global" (if the value relates to all replicates). Column names MUST only contain the following characters: "A"-"Z", "a"-"z", "0"-"9", "_", "-", "[", "]", and ":". CV parameter accessions MAY be used for optional columns following the format: opt_{OBJECT_ID}_cv_{accession}_{parameter name}. Spaces within the parameter's name MUST be replaced by "_".
type:	Column
quantification:	optional|optional
identification:	optional|optional
example:	PRT  accession   ...  opt_assay[1]_my_value  opt_global_another_value
example:	PRH  P12345      ...  My value about assay[1]      some other value that is across reps

name:	sequence
section:	peptide
def:	The peptide's sequence 
type:	String
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence                    ...
example:	PEP  KVPQVSTPTLVEVSR             ...
example:	PEP  EIEILACEIR ...

name:	accession
section:	peptide
def:	The protein's accession the peptide is associated with. In case no protein section is present in the file or the peptide was not assigned to a protein the field should be filled with "null". If the peptide can be assigned to more than one protein, multiple rows SHOULD be provided for each peptide to protein mapping.
type:	String
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence         accession  ...
example:	PEP  KVPQVSTPTLVEVSR  P02768     ...

name:	unique
section:	peptide
def:	Indicates whether the peptide is unique for this protein in respect to the searched database.
type:	Boolean (0/1)
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           accession       unique  ...
example:	PEP  KVPQVSTPTLVEVSR    P02768       0       ...
example:	PEP  VFDEFKPLVEEPQNLIK  P02768       1       ...

name:	database
section:	peptide
def:	The protein database used for the search (could theoretically come from a different species) and the peptide sequence comes from.
type:	String
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           accession       unique  database   ...
example:	PEP  KVPQVSTPTLVEVSR    P02768       0       UniProtKB  ...
example:	PEP  VFDEFKPLVEEPQNLIK  P02768       1       UniProtKB  ...

name:	database_version
section:	peptide
def:	The protein database's version – in case there is no version available (custom build) the creation / download (e.g., for NCBI nr) date should be given. Additionally, the number of entries in the database MAY be reported in round brackets after the version in the format: {version} ({#entries} entries), for example "2011-11 (1234 entries)".
type:	String
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           accession       unique  database   database_version  ...
example:	PEP  KVPQVSTPTLVEVSR    P02768       0       UniProtKB  2011_11           ...
example:	PEP  VFDEFKPLVEEPQNLIK  P02768       1       UniProtKB  2011_11           ...

name:	search_engine
section:	peptide
def:	A "|" delimited list of search engine(s) used to identify this peptide. Search engines must be supplied as parameters.
type:	Parameter List
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   search_engine                                     ...
example:	PEP  KVPQVSTPTLVEVSR    ...   [MS,MS:1001207,Mascot,]|[MS,MS:1001208,Sequest,]  ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   [MS,MS:1001207,Mascot,]                           ...

name:	best_search_engine_score
section:	peptide
def:	A "|" delimited list of best search engine score(s) for the given peptide across all replicates. Scores SHOULD be reported using CV parameters whenever possible.
type:	Parameter List
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   best_search_engine_score                ...
example:	PEP  KVPQVSTPTLVEVSR    ...   [MS,MS:1001155,Sequest:xcorr,2]    ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   [MS,MS:1001171,Mascot score,47.2]  ...

name:	search_engine_score_ms_run[1-n]
section:	peptide
def:	A "|" delimited list of search engine score(s) for the given peptide from a given MS run. Scores SHOULD be reported using CV parameters whenever possible.
type:	Parameter List
quantification:	optional|mandatory
identification:	none|none
example:	PEH  sequence           ...   search_engine_score_ms_run[1]                ...
example:	PEP  KVPQVSTPTLVEVSR    ...   [MS,MS:1001155,Sequest:xcorr,2]    ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   [MS,MS:1001171,Mascot score,47.2]  ...

name:	reliability
section:	peptide
def:	The reliability of the given peptide identification. This must be supplied by the resource and has to be one of the following values: 1: high reliability	2: medium reliability	3: poor reliability	Important: An identification's reliability is resource dependent.
type:	Integer
quantification:	optional|optional
identification:	none|none
example:	PEH  sequence           ...   reliability   ...
example:	PEP  KVPQVSTPTLVEVSR    ...   3             ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   1             ...

name:	modifications
section:	peptide
def:	The peptide's modifications or substitutions. To further distinguish peptide terminal modifications, these SHOULD be reported at position 0 or peptide size + 1 respectively. For detailed information see the modifications section in the protein table. If substitutions are reported, the “sequence” column MUST contain the original, unaltered sequence. Note that in contrast to the PSM  section, fixed modifications or modifications caused by the quantification reagent  i.e. the SILAC labels/tags SHOULD NOT be reported. It is thus also expected that modification reliability scores will typically be reported at the PSM-level only. 
type:	String
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   modifications      ...
example:	PEP  KVPQVSTPTLVEVSR    ...   10-MOD:00412  ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   NA                 ...

name:	retention_time
section:	peptide
def:	A "|"-separated list of time points. Semantics may vary on how retention times are reported. For quantification approaches, different exporters MAY wish to export the retention times of all spectra used for quantification (e.g. in MS2 approaches) or the centre point of the feature quantified for MS1 approaches. It is assumed that the reported value(s) are for a given “master” peptide from one assay only (and the unlabeled peptide in label-based approaches). If the exporter wishes to export values for all assays, this can be done using optional columns. Retention time MUST be reported in seconds. Otherwise, units MUST be reported in the Metadata Section ("colunit-peptide").
type:	Double List
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   retention_time    ...
example:	PEP  KVPQVSTPTLVEVSR    ...   10.2                                       ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   15.8                                       ...

name:	retention_time_window
section:	peptide
def:	Start and end of the retention time window separated by a single ‘|’. Semantics may vary but its primary intention is to report feature boundaries of eluting peptides (along with feature centroids in the retention_time column). It is assumed that the reported interval is for a given “master” peptide from one assay only (and the unlabeled peptide in label-based approaches). If the exporter wishes to export values for all assays, this can be done using optional columns. Retention time windows MUST be reported in seconds. Otherwise, units MUST be reported in the Metadata Section ("colunit-peptide").
type:	Double List
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   retention_time_window    ...
example:	PEP  KVPQVSTPTLVEVSR    ...   1123.2|1145.3

name:	charge
section:	peptide
def:	The charge assigned by the search engine/software. In case multiple charge states for the same peptide are observed these should be reported as distinct entries in the peptide table. In case the charge is unknown "null" MUST be used.
type:	Integer
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   charge     ...
example:	PEP  KVPQVSTPTLVEVSR    ...   2          ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   3          ...

name:	mass_to_charge
section:	peptide
def:	The precursor's experimental mass to charge (m/z). It is assumed that the reported value is for a given "master" peptide from one assay only (and the unlabeled peptide in label-based approaches). If the exporter wishes to export values for all assays, this can be done using optional columns.
type:	Double
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...   mass_to_charge   ...
example:	PEP  KVPQVSTPTLVEVSR    ...   1234.4           ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   123.4            ...

name:	uri
section:	peptide
def:	A URI pointing to the peptide's entry in the experiment it was identified in (e.g., the peptide's PRIDE entry).
type:	URI
quantification:	optional|optional
identification:	none|none
example:	PEH  sequence           ...   uri                                         ...
example:	PEP  KVPQVSTPTLVEVSR    ...   http://www.ebi.ac.uk/pride/link/to/peptide  ...
example:	PEP  VFDEFKPLVEEPQNLIK  ...   http://www.ebi.ac.uk/pride/link/to/peptide  ...

name:	spectra_ref
section:	peptide
def:	Reference to spectra in a spectrum file. It is expected that spectra_ref SHOULD only be used for MS2-based quantification approaches, in which retention time values cannot identify the spectra used for quantitation. The reference must be in the format ms_run[1-n]:{SPECTRA_REF} where SPECTRA_REF MUST follow the format defined in 5.2. Multiple spectra MUST be referenced using a "|" delimited list.
type:	String
quantification:	optional|(mandatory)
identification:	none|none
example:	PEH  sequence           ...   spectra_ref                               ...
example:	PEP  KVPQVSTPTLVEVSR    ...   ms_run[1]:index=5                        ...   
example:	PEP  VFDEFKPLVEEPQNLIK  ...   ms_run[2]:index=7|ms_run[2]:index=9     ...

name:	peptide_abundance_assay[1-n]
section:	peptide
def:	The peptide's abundance in the given assay. 
type:	Double
quantification:	optional|mandatory
identification:	none|none
example:	PEH  sequence           ...  peptide_abundance_assay[1]  peptide_abundance_assay[2]...  
example:	PEP  KVPQVSTPTLVEVSR    ...  0.4                           0.5

name:	peptide_abundance_study_variable[1-n]
section:	peptide
def:	The peptide's abundance in the given study variable, for example calculated as an average of assay values. 
type:	Double
quantification:	mandatory|mandatory
identification:	none|none
example:	PEH  sequence           ...  peptide_abundance_study_variable[1]  ...  
example:	PEP  KVPQVSTPTLVEVSR    ...  0.4                                            ...

name:	peptide_abundance_stdev_study_variable[1-n]
section:	peptide
def:	The standard deviation of the peptide's abundance for a given study variable. 
type:	Double
quantification:	(mandatory)|(mandatory)
identification:	none|none
example:	PEH  sequence           ...  peptide_abundance_sub[1]  peptide_abundance_stdev_sub[1] ...
example:	PEP  KVPQVSTPTLVEVSR    ...  0.4                       0.2                            ...

name:	peptide_abundance_std_error_sub[1-n]
section:	peptide
def:	The standard error of the peptide's abundance for a given study variable.
type:	Double
quantification:	(mandatory)|(mandatory)
identification:	none|none
example:	PEH  sequence        ...  peptide_abundance_sub[1] ... peptide_abundance_std_error_sub[1] ...
example:	PEP  KVPQVSTPTLVEVSR ...  0.4                      ... 0.2                                ...

name:	opt_global_*
section:	peptide
def:	Optional (this column MAY be present) Additional columns can be added to the end of the peptide table. These column headers MUST start with the prefix "opt_" followed by the identifier of the object they reference: assay, study variable, MS run or "global" (if the value relates to all replicates). Column names MUST only contain the following characters: "A"-"Z", "a"-"z", "0"-"9", "_", "-", "[", "]", and ":". CV parameter accessions MAY be used for optional columns following the format: opt_{OBJECT_ID}_cv_{accession}_{parameter name}. Spaces within the parameter's name MUST be replaced by "_".
type:	Column
quantification:	optional|optional
identification:	none|none
example:	PRT  accession   ...  opt_assay[1]_my_value  opt_global_another_value
example:	PRH  P12345      ...  My value about assay[1]      some other value that is across reps

name:	sequence
section:	psm
def:	The peptide's sequence corresponding to the PSM 
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence                    ...
example:	PSM  KVPQVSTPTLVEVSR             ...
example:	PSM  EIEILACEIR ...

name:	PSM_ID
section:	psm
def:	A unique identifier for a PSM within the file. If a PSM can be matched to multiple proteins, the same PSM should be represented on multiple rows with different accessions and the same PSM_ID.  
type:	Integer
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence         PSM_ID  accession...
example:	PSM  KVPQVSTPTLVEVSR  1     P02768     ...
example:	PSM  PEPTIDR  2     P04267     ...
example:	PSM  PEPTIDR  2     P04268     ...

name:	accession
section:	psm
def:	The protein's accession the corresponding peptide sequence (coming from the PSM) is associated with. In case no protein section is present in the file or the peptide was not assigned to a protein the field should be filled with "null". If the PSM can be assigned to more than one protein, the same PSM should be represented on multiple rows with the same unique identifier. 
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence         accession  ...
example:	PSM  KVPQVSTPTLVEVSR  P02768     ...

name:	unique
section:	psm
def:	Indicates whether the peptide sequence (coming from the PSM) is unique for this protein in respect to the searched database.
type:	Boolean (0/1)
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           accession       unique  ...
example:	PSM  KVPQVSTPTLVEVSR    P02768       0       ...
example:	PSM  VFDEFKPLVEEPQNLIK  P02768       1       ...

name:	database
section:	psm
def:	The protein database used for the search (could theoretically come from a different species) and the peptide sequence comes from.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           accession       unique  database   ...
example:	PSM  KVPQVSTPTLVEVSR    P02768       0       UniProtKB  ...
example:	PSM  VFDEFKPLVEEPQNLIK  P02768       1       UniProtKB  ...

name:	database_version
section:	psm
def:	The protein database's version – in case there is no version available (custom build) the creation / download (e.g., for NCBI nr) date should be given. Additionally, the number of entries in the database MAY be reported in round brackets after the version in the format: {version} ({#entries} entries), for example "2011-11 (1234 entries)".
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           accession       unique  database   database_version  ...
example:	PSM  KVPQVSTPTLVEVSR    P02768       0       UniProtKB  2011_11           ...
example:	PSM  VFDEFKPLVEEPQNLIK  P02768       1       UniProtKB  2011_11           ...

name:	search_engine
section:	psm
def:	A "|" delimited list of search engine(s) used to create the PSM. Search engines must be supplied as parameters.
type:	Parameter List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   search_engine                                     ...
example:	PSM  KVPQVSTPTLVEVSR    ...   [MS,MS:1001207,Mascot,]|[MS,MS:1001208,Sequest,]  ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   [MS,MS:1001207,Mascot,]                           ...

name:	search_engine_score
section:	psm
def:	A "|" delimited list of search engine score(s) for the given PSM. 
type:	Parameter List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   best_search_engine_score                ...
example:	PSM  KVPQVSTPTLVEVSR    ...   [MS,MS:1001155,Sequest:xcorr,2]    ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   [MS,MS:1001171,Mascot score,47.2]  ...

name:	reliability
section:	psm
def:	The reliability of the given PSM. This must be supplied by the resource and has to be one of the following values: 1: high reliability	2: medium reliability	3: poor reliability	Important: An identification's reliability is resource dependent.
type:	Integer
quantification:	optional|optional
identification:	optional|optional
example:	PSH  sequence           ...   reliability   ...
example:	PSM  KVPQVSTPTLVEVSR    ...   3             ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   1             ...

name:	modifications
section:	psm
def:	The peptide's (coming from the PSM) modifications or substitutions. To further distinguish peptide terminal modifications, these SHOULD be reported at position 0 or peptide size + 1 respectively. For detailed information see the modifications section in the protein table. If substitutions are reported, the "sequence" column MUST contain the original, unaltered sequence. Note that in contrast to the PRT and PEP section all modifications (variable and fixed modifications, including those induced by quantification reagents) SHOULD BE reported in the PSM section.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   modifications      ...
example:	PSM  KVPQVSTPTLVEVSR    ...   10[MS,MS:100xxxx,Probability Score Y,0.8]-MOD:00412  ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   NA                 ...

name:	retention_time
section:	psm
def:	The retention time of the spectrum. A "|"-separated list of multiple time points is allowed in case multiple spectra were combined by the search engine to make the PSM. It MUST be reported in seconds. Otherwise, the units MUST be reported in the Metadata Section (‘columnit_psm').
type:	Double List
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   retention_time    ...
example:	PSM  KVPQVSTPTLVEVSR    ...   10.2                                       ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   15.8                                       ...

name:	charge
section:	psm
def:	The charge assigned by the search engine/software. 
type:	Integer
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   charge     ...
example:	PSM  KVPQVSTPTLVEVSR    ...   2          ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   3          ...

name:	exp_mass_to_charge
section:	psm
def:	The PSM's experimental mass to charge (m/z). 
type:	Double
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   mass_to_charge   ...
example:	PSM  KVPQVSTPTLVEVSR    ...   1234.4           ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   123.4            ...

name:	calc_mass_to_charge
section:	psm
def:	The PSM's calculated (theoretical) mass to charge (m/z). 
type:	Double
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   mass_to_charge   ...
example:	PSM  KVPQVSTPTLVEVSR    ...   1234.4           ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   123.4            ...

name:	uri
section:	psm
def:	A URI pointing to the PSM's entry in the experiment it was identified in (e.g., the peptide's PRIDE entry).
type:	URI
quantification:	optional|optional
identification:	optional|optional
example:	PSH  sequence           ...   uri                                         ...
example:	PSM  KVPQVSTPTLVEVSR    ...   http://www.ebi.ac.uk/pride/link/to/peptide  ...
example:	PSM  VFDEFKPLVEEPQNLIK  ...   http://www.ebi.ac.uk/pride/link/to/peptide  ...

name:	spectra_ref
section:	psm
def:	Reference to a spectrum in a spectrum file. The reference must be in the format ms_run[1-n]:{SPECTRA_REF} where SPECTRA_REF MUST follow the format defined in 5.2. Multiple spectra MUST be referenced using a "|" delimited list for the (rare) cases in which search engines have combined multiple spectra to make identifications. 
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   spectra_ref                               ...
example:	PSM  KVPQVSTPTLVEVSR    ...   ms_run[1]:index=5                        ...   
example:	PSM  VFDEFKPLVEEPQNLIK  ...   ms_run[2]:index=7|ms_run[2]:index=9     ...

name:	pre
section:	psm
def:	Amino acid preceding the peptide (coming from the PSM) in the protein sequence. If unknown "null" MUST be used, if the peptide is N-terminal "-" MUST be used. 
type:	String
quantification:	optional|optional
identification:	mandatory|mandatory
example:	PSH  sequence           ...   pre    post                               ...
example:	PSM  KVPQVSTPTLVEVSR    ...   K      D   ...   
example:	PSM  VFDEFKPLVEEPQNLIK  ...   R      L   ...

name:	post
section:	psm
def:	Amino acid following the peptide (coming from the PSM) in the protein sequence. If unknown "null" MUST be used, if the peptide is C-terminal "-" MUST be used.
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   pre    post                               ...
example:	PSM  KVPQVSTPTLVEVSR    ...   K      D   ...   
example:	PSM  VFDEFKPLVEEPQNLIK  ...   R      L   ...

name:	start
section:	psm
def:	The start position of the peptide (coming from the PSM) within the protein, counting 1 as the N-terminus of the protein.  
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   start    end                ...
example:	PSM  KVPQVSTPTLVEVSR    ...   45       57                 ...   
example:	PSM  VFDEFKPLVEEPQNLIK  ...   34       46                 ...

name:	end
section:	psm
def:	The end position of the peptide (coming from the PSM) within the protein, counting 1 as the N-terminus of the protein.  
type:	String
quantification:	mandatory|mandatory
identification:	mandatory|mandatory
example:	PSH  sequence           ...   start    end                ...
example:	PSM  KVPQVSTPTLVEVSR    ...   45       57                 ...   
example:	PSM  VFDEFKPLVEEPQNLIK  ...   34       46                 ...

name:	opt_global_*
section:	psm
def:	Additional columns can be added to the end of the PSM table. These column headers MUST start with the prefix "opt_" followed by the identifier of the object they reference: assay, study variable, MS run or "global" (if the value relates to all replicates). Column names MUST only contain the following characters: ‘A'-‘Z', ‘a'-‘z', ‘0'-‘9', ‘_', ‘-', ‘[', ‘]', and ‘:'. CV parameter accessions MAY be used for optional columns following the format: opt_{OBJECT_ID}_cv_{accession}_{parameter name}. Spaces within the parameter's name MUST be replaced by ‘_'.
type:	Column
quantification:	optional|optional
identification:	optional|optional
example:	PSH  sequence   ...  opt_assay[1]_my_value  opt_global_another_value
example:	PSM  PEPTIDER      ...  My value about assay[1]      some other value that is across reps